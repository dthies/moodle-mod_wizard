{"version":3,"file":"presets_list.min.js","sources":["../src/presets_list.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course presets list management.\n *\n * @module      mod_wizard/presets_list\n * @copyright   2024 Daniel Thies <dethies@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport ModalForm from 'core_form/modalform';\nimport {add as addToast} from 'core/toast';\nimport {getString} from 'core/str';\nimport {refreshTableContent} from 'core_table/dynamic';\nimport * as Selectors from 'core_table/local/dynamic/selectors';\n\n/**\n * Initialise module.\n */\nexport const init = () => {\n    document.addEventListener('click', event => {\n\n        const courseToolDelete = event.target.closest('[data-action=\"course-tool-delete\"]');\n        if (courseToolDelete) {\n            const triggerElement = courseToolDelete.closest('.dropdown').querySelector('.dropdown-toggle');\n            const modalForm = new ModalForm({\n                formClass: \"mod_wizard\\\\form\\\\delete_preset\",\n                args: {id: courseToolDelete.dataset.courseToolId},\n                modalConfig: {title: getString('confirm', 'core')},\n                returnFocus: courseToolDelete.closest('.dropdown').querySelector('.dropdown-toggle')\n            });\n            event.preventDefault();\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, async() => {\n                const tableRoot = triggerElement.closest(Selectors.main.region);\n                await addToast(getString(\n                    'coursetooldeleted', 'mod_lti', courseToolDelete.dataset.courseToolName),\n                    {type: 'success'}\n                );\n                return await refreshTableContent(tableRoot);\n            });\n            modalForm.show();\n        }\n    });\n};\n"],"names":["document","addEventListener","event","courseToolDelete","target","closest","triggerElement","querySelector","modalForm","ModalForm","formClass","args","id","dataset","courseToolId","modalConfig","title","returnFocus","preventDefault","events","FORM_SUBMITTED","async","tableRoot","Selectors","main","region","courseToolName","type","show"],"mappings":"yyCAkCoB,KAChBA,SAASC,iBAAiB,SAASC,cAEzBC,iBAAmBD,MAAME,OAAOC,QAAQ,yCAC1CF,iBAAkB,OACZG,eAAiBH,iBAAiBE,QAAQ,aAAaE,cAAc,oBACrEC,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,kCACXC,KAAM,CAACC,GAAIT,iBAAiBU,QAAQC,cACpCC,YAAa,CAACC,OAAO,kBAAU,UAAW,SAC1CC,YAAad,iBAAiBE,QAAQ,aAAaE,cAAc,sBAErEL,MAAMgB,iBACNV,UAAUP,iBAAiBO,UAAUW,OAAOC,gBAAgBC,gBAClDC,UAAYhB,eAAeD,QAAQkB,UAAUC,KAAKC,qBAClD,eAAS,kBACX,oBAAqB,UAAWtB,iBAAiBU,QAAQa,gBACzD,CAACC,KAAM,kBAEE,gCAAoBL,cAErCd,UAAUoB"}